DROP PROCEDURE IF EXISTS storedAltaCliente; //Si existe borrarla y crearla de neuvo.
GO
-------------------------------------------------------------------------------------
Sentencia de Sql para poder listar todos los procedimientos almacenados activos.
SELECT name, create_date, modify_date
FROM sys.procedures
ORDER BY name
----------------------------------------------------------------------------------------
< CLIENTE >

CREATE PROCEDURE storedAltaCliente
    @Codigo INT,
    @Nombre VARCHAR(50),
    @Telefono VARCHAR(10),
    @Mail VARCHAR(100)
AS
BEGIN
    INSERT INTO Clientes (Codigo, Nombre, Telefono, Mail)
    VALUES (@Codigo, @Nombre, @Telefono, @Mail);
END;
GO

create procedure storedModificarCliente
@Codigo int,
@Nombre varchar(50),
@Telefono varchar(50),
@Mail varchar(100)
as
UPDATE Clientes SET Codigo = @Codigo, Nombre = @Nombre, Telefono = @Telefono, Mail = @Mail WHERE Codigo = @Codigo

create procedure storedListarClientes as
SELECT C.Codigo, C.Nombre, C.Telefono, C.Mail FROM Clientes AS C
-------------------------------------------------------------------------------------------------------

CARGOS

create procedure storedAltaCargo
@Codigo int,
@Nombre varchar(50)
INSERT INTO Cargos values (@Codigo,@Nombre)

create procedure storedModificarCargo
@Codigo int,
@Nombre varchar(50)
AS
UPDATE Cargos SET Codigo = @Codigo, Nombre = @Nombre WHERE Codigo = @Codigo;

CREATE PROCEDURE storedListarCargos AS
SELECT Codigo, Nombre FROM Cargos 

CREATE PROCEDURE storedBajaCargo
@Codigo int
AS
BEGIN
    DELETE FROM Cargos WHERE Codigo = @Codigo;
END;
GO
-----------------------------------------------------------------------------------------------
Razones Sociales.
CREATE PROCEDURE storedAltaRazonSocial
    @Codigo INT,
    @Nombre VARCHAR(50),
    @CUIT VARCHAR(11),
    @Cliente INT
 AS
BEGIN
    INSERT INTO Razones_Sociales (Codigo, Nombre, CUIT, Cliente)
    VALUES (@Codigo, @Nombre, @CUIT, @Cliente)
END



CREATE PROCEDURE storedBajaRazonSocial
@Codigo INT
AS
BEGIN
    DELETE FROM Razones_Sociales
    WHERE Codigo = @Codigo
END



CREATE PROCEDURE storedModificarRazonSocial
    @Codigo INT,
    @Nombre VARCHAR(50),
    @CUIT VARCHAR(11),
    @Cliente INT
AS
BEGIN
    UPDATE Razones_Sociales
    SET Nombre = @Nombre,
        CUIT = @CUIT,
        Cliente = @Cliente
    WHERE Codigo = @Codigo
END

CREATE PROCEDURE listarRazonSocialSP
---------------------------------------------------------------------------------------------------
<<<<<<<<< INCIDENTES >>>>>>>>>>>>>

CREATE PROCEDURE storedAltaIncidente
    @Numero INT,
    @Usuario_Registro int,
    @Fecha_Registro date,
    @Cliente int,
	@Razon_Social int,
	@Tipo int,
	@SubTipo int,
	@Detalle VARCHAR(1500)
 AS
BEGIN
    INSERT INTO Incidentes(Numero,Usuario_Registro,Fecha_Registro,Cliente,Razon_Social,Tipo,Subtipo,Detalle)
    VALUES (@Numero, @Usuario_Registro, @Fecha_Registro, @Cliente,@Razon_Social,@Tipo,@SubTipo,@Detalle)
END


CREATE PROCEDURE storedBajaIncidente
@Numero INT
AS
BEGIN
    DELETE FROM Incidentes
    WHERE Numero = @Numero
END

CREATE PROCEDURE storedModificarIncidente
    @Numero INT,
    @Usuario_Registro int,
    @Fecha_Registro date,
    @Cliente int,
	@Razon_Social int,
	@Tipo int,
	@SubTipo int,
	@Detalle VARCHAR(1500)
AS
BEGIN
    UPDATE Incidentes
    SET Numero = @Numero,
        Usuario_Registro = @Usuario_Registro,
        Fecha_Registro= @Fecha_Registro,
		Cliente = @Cliente,
		Razon_Social=@Razon_Social,
		Tipo = @Tipo,
		Subtipo = @SubTipo,
		Detalle = @Detalle
	WHERE Numero = @Numero
END


CREATE PROCEDURE storedListarIncidentes AS
SELECT Numero, Usuario_Registro,Fecha_Registro,Cliente,Razon_Social,Tipo,Subtipo,Detalle FROM Incidentes

-------------------------------------------------------------------------------------------------------------











